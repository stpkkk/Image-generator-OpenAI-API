// @ts-nocheck
import React, { useEffect, useState } from 'react';
import { FormField, Loader, Card } from '../components';

type Props = {
  data: any;
  title: string;
};

const RenderCards: React.FC<Props> = ({ data, title }) => {
  if (data?.length > 0) {
    // eslint-disable-next-line no-underscore-dangle
    return data.map((post: any) => <Card key={post._id} {...post} />);
  }

  return (
    <h2 className="mt-5 font-bold text-[#37A051] text-xl uppercase">{title}</h2>
  );
};
export const HomePage: React.FC = () => {
  const [loading, setLoading] = useState(false);
  const [allPosts, setAllPosts] = useState(null);

  const [searchText, setSearchText] = useState('');
  const [searchTimeout, setSearchTimeout] = useState(null);
  const [searchedResults, setSearchedResults] = useState(null);

  const fetchPosts = async () => {
    setLoading(true);

    try {
      const response = await fetch('http://localhost:8080/api/v1/post', {
        method: 'GET',
        headers: {
          'Content-Type': 'application/json',
        },
      });

      if (response.ok) {
        const result = await response.json();
        setAllPosts(result.data.reverse());
      }
    } catch (err) {
      // eslint-disable-next-line no-alert
      alert(err);
    } finally {
      setLoading(false);
    }
  };

  useEffect(() => {
    fetchPosts();
  }, []);

  const handleSearchChange = (e) => {
    clearTimeout(searchTimeout);
    setSearchText(e.target.value);

    setSearchTimeout(
      setTimeout(() => {
        const searchResult = allPosts.filter(
          (item) =>
            item.name.toLowerCase().includes(searchText.toLowerCase()) ||
            item.prompt.toLowerCase().includes(searchText.toLowerCase())
        );
        setSearchedResults(searchResult);
      }, 500)
    );
  };

  return (
    <>
      <section className="bg-[#181818] min-h-54 py-[50px] px-[10px]">
        <div className=" max-w-[1200px] mx-auto ">
          <h1 className="font-bold text-[32px] ">Showcase</h1>
          <p className="mt-2 text-[20px] max-w-[1000px] text-[#babec4]">
            Browse through a collection of imaginative and visually stunning
            images generated by DALL-E AI
          </p>
          <div className="mt-16">
            <FormField
              labelName="Search posts"
              type="text"
              name="text"
              placeholder="Search..."
              value={searchText}
              handleChange={handleSearchChange}
            />
          </div>
        </div>
      </section>
      <section className="mt-10  max-w-[1200px] mx-auto">
        {loading ? (
          <div className="flex justify-center items-center">
            <Loader />
          </div>
        ) : (
          <div>
            {searchText && (
              <h2 className="font-medium text-[#babec4] text-xl mb-3">
                Showing results for&nbsp;
                <span className="text-[#fff]">{searchText}</span>
              </h2>
            )}
            <div className="grid lg:grid-cols-4 sm:grid-cols-3 xs:grid-cols-2 grid-cols-1 gap-3">
              {searchText ? (
                <RenderCards
                  data={searchedResults}
                  title="No search results found"
                />
              ) : (
                <RenderCards data={allPosts} title="No posts found" />
              )}
            </div>
          </div>
        )}
      </section>
    </>
  );
};
